[{"C:\\Users\\44777\\Desktop\\IT-Incubator\\putSamurajaTS\\src\\index.tsx":"1","C:\\Users\\44777\\Desktop\\IT-Incubator\\putSamurajaTS\\src\\render.tsx":"2","C:\\Users\\44777\\Desktop\\IT-Incubator\\putSamurajaTS\\src\\App.tsx":"3","C:\\Users\\44777\\Desktop\\IT-Incubator\\putSamurajaTS\\src\\components\\Header\\Header.tsx":"4","C:\\Users\\44777\\Desktop\\IT-Incubator\\putSamurajaTS\\src\\components\\Profile\\Profile.tsx":"5","C:\\Users\\44777\\Desktop\\IT-Incubator\\putSamurajaTS\\src\\components\\Dialogs\\Dialogs.tsx":"6","C:\\Users\\44777\\Desktop\\IT-Incubator\\putSamurajaTS\\src\\components\\Navbar\\Navbar.tsx":"7","C:\\Users\\44777\\Desktop\\IT-Incubator\\putSamurajaTS\\src\\components\\Profile\\ProfileInfo\\ProfileInfo.tsx":"8","C:\\Users\\44777\\Desktop\\IT-Incubator\\putSamurajaTS\\src\\components\\Profile\\MyPosts\\MyPosts.tsx":"9","C:\\Users\\44777\\Desktop\\IT-Incubator\\putSamurajaTS\\src\\components\\Dialogs\\DialogItem\\DialogItem.tsx":"10","C:\\Users\\44777\\Desktop\\IT-Incubator\\putSamurajaTS\\src\\components\\Dialogs\\Message\\Message.tsx":"11","C:\\Users\\44777\\Desktop\\IT-Incubator\\putSamurajaTS\\src\\components\\Profile\\MyPosts\\Post\\Post.tsx":"12","C:\\Users\\44777\\Desktop\\IT-Incubator\\putSamurajaTS\\src\\redux\\dialogs-reducer.ts":"13","C:\\Users\\44777\\Desktop\\IT-Incubator\\putSamurajaTS\\src\\redux\\profile-reducer.ts":"14","C:\\Users\\44777\\Desktop\\IT-Incubator\\putSamurajaTS\\src\\redux\\store.tsx":"15","C:\\Users\\44777\\Desktop\\IT-Incubator\\putSamurajaTS\\src\\redux\\redux-store.ts":"16","C:\\Users\\44777\\Desktop\\IT-Incubator\\putSamurajaTS\\src\\components\\Profile\\MyPosts\\MyPostsContainer.tsx":"17","C:\\Users\\44777\\Desktop\\IT-Incubator\\putSamurajaTS\\src\\components\\Dialogs\\DialogsContainer.tsx":"18","C:\\Users\\44777\\Desktop\\IT-Incubator\\putSamurajaTS\\src\\StoreContext.tsx":"19","C:\\Users\\44777\\Desktop\\IT-Incubator\\putSamurajaTS\\src\\components\\Users\\Users.tsx":"20","C:\\Users\\44777\\Desktop\\IT-Incubator\\putSamurajaTS\\src\\redux\\users-reducer.ts":"21","C:\\Users\\44777\\Desktop\\IT-Incubator\\putSamurajaTS\\src\\components\\Users\\UsersContainer.tsx":"22"},{"size":415,"mtime":1613057090343,"results":"23","hashOfConfig":"24"},{"size":566,"mtime":1612631798532,"results":"25","hashOfConfig":"26"},{"size":885,"mtime":1613142740837,"results":"27","hashOfConfig":"24"},{"size":256,"mtime":1607781986180,"results":"28","hashOfConfig":"24"},{"size":313,"mtime":1613053311027,"results":"29","hashOfConfig":"24"},{"size":1490,"mtime":1613226792095,"results":"30","hashOfConfig":"24"},{"size":945,"mtime":1613144008148,"results":"31","hashOfConfig":"24"},{"size":443,"mtime":1609240734060,"results":"32","hashOfConfig":"24"},{"size":1455,"mtime":1613227381243,"results":"33","hashOfConfig":"24"},{"size":414,"mtime":1612525760744,"results":"34","hashOfConfig":"24"},{"size":386,"mtime":1612525760678,"results":"35","hashOfConfig":"24"},{"size":498,"mtime":1612525760809,"results":"36","hashOfConfig":"24"},{"size":2370,"mtime":1613151745922,"results":"37","hashOfConfig":"24"},{"size":1536,"mtime":1613144814333,"results":"38","hashOfConfig":"24"},{"size":2527,"mtime":1613043647611,"results":"39","hashOfConfig":"26"},{"size":1130,"mtime":1613223308143,"results":"40","hashOfConfig":"24"},{"size":712,"mtime":1613144472503,"results":"41","hashOfConfig":"24"},{"size":760,"mtime":1613224635574,"results":"42","hashOfConfig":"24"},{"size":419,"mtime":1613043803709,"results":"43","hashOfConfig":"26"},{"size":3052,"mtime":1613723788909,"results":"44","hashOfConfig":"24"},{"size":3240,"mtime":1613724180719,"results":"45","hashOfConfig":"24"},{"size":1191,"mtime":1613724180699,"results":"46","hashOfConfig":"24"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},"vye4oi",{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"wgp7x7",{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"49"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"49"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"49"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"49"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"49"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"49"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"49"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"49"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"99","messages":"100","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\44777\\Desktop\\IT-Incubator\\putSamurajaTS\\src\\index.tsx",[],["101","102"],"C:\\Users\\44777\\Desktop\\IT-Incubator\\putSamurajaTS\\src\\render.tsx",[],["103","104"],"C:\\Users\\44777\\Desktop\\IT-Incubator\\putSamurajaTS\\src\\App.tsx",[],"C:\\Users\\44777\\Desktop\\IT-Incubator\\putSamurajaTS\\src\\components\\Header\\Header.tsx",["105"],"import React from 'react';\r\nimport s from './Header.module.css';\r\n\r\nconst Header = () => {\r\n    return <header className={s.header}>\r\n        <img src='https://www.freelogodesign.org/Content/img/logo-ex-7.png' />\r\n    </header>\r\n}\r\n\r\nexport default Header;","C:\\Users\\44777\\Desktop\\IT-Incubator\\putSamurajaTS\\src\\components\\Profile\\Profile.tsx",[],"C:\\Users\\44777\\Desktop\\IT-Incubator\\putSamurajaTS\\src\\components\\Dialogs\\Dialogs.tsx",[],"C:\\Users\\44777\\Desktop\\IT-Incubator\\putSamurajaTS\\src\\components\\Navbar\\Navbar.tsx",["106","107","108"],"import React from 'react';\r\nimport s from './Navbar.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Navbar = () => {\r\n    return (\r\n        <nav className={s.nav}>\r\n            <div className={s.item}>\r\n                <NavLink to=\"/profile\" activeClassName={s.activeLink}>Profile</NavLink>\r\n            </div>\r\n            <div className={`${s.item} ${s.active}`}>\r\n                <NavLink to=\"/dialogs\" activeClassName={s.activeLink}>Messages</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <a>News</a>\r\n            </div>\r\n            <div className={s.item}>\r\n                <a>Music</a>\r\n            </div>\r\n            <div className={s.item}>\r\n                <a>Settings</a>\r\n            </div>\r\n            <br />\r\n            <div className={s.item} >\r\n                <NavLink to={'/users'}>Users</NavLink>\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default Navbar;","C:\\Users\\44777\\Desktop\\IT-Incubator\\putSamurajaTS\\src\\components\\Profile\\ProfileInfo\\ProfileInfo.tsx",["109"],"import React from 'react';\r\nimport s from './ProfileInfo.module.css';\r\n\r\nconst ProfileInfo = () => {\r\n    return (\r\n        <div>\r\n            <div>\r\n                <img\r\n                    src='https://images.pexels.com/photos/248797/pexels-photo-248797.jpeg?auto=compress&cs=tinysrgb&h=350'/>\r\n            </div>\r\n            <div className={s.descriptionBlock}>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileInfo;","C:\\Users\\44777\\Desktop\\IT-Incubator\\putSamurajaTS\\src\\components\\Profile\\MyPosts\\MyPosts.tsx",[],"C:\\Users\\44777\\Desktop\\IT-Incubator\\putSamurajaTS\\src\\components\\Dialogs\\DialogItem\\DialogItem.tsx",[],"C:\\Users\\44777\\Desktop\\IT-Incubator\\putSamurajaTS\\src\\components\\Dialogs\\Message\\Message.tsx",[],"C:\\Users\\44777\\Desktop\\IT-Incubator\\putSamurajaTS\\src\\components\\Profile\\MyPosts\\Post\\Post.tsx",["110"],"import React from 'react';\r\nimport s from './Post.module.css';\r\nimport {PostsType} from \"../../../../redux/store\";\r\n\r\nconst Post: React.FC<PostsType> = (props) => {\r\n    return (\r\n        <div className={s.item}>\r\n            <img src='https://movies4maniacs.liberty.me/wp-content/uploads/sites/1218/2015/09/avatarsucks.jpg'/>\r\n            {props.message}\r\n            <div>\r\n                <span>like</span> {props.likesCount}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Post;","C:\\Users\\44777\\Desktop\\IT-Incubator\\putSamurajaTS\\src\\redux\\dialogs-reducer.ts",["111"],"import {v1} from \"uuid\";\r\nimport {DialogsPageType} from \"./store\";\r\n\r\nexport enum DIALOGS_ACTION_TYPE {\r\n    ADD_NEW_DIALOGS_MESSAGE = 'ADD-NEW-DIALOGS-MESSAGE',\r\n    UPDATE_NEW_MESSAGE_BODY = 'UPDATE-NEW-DIALOGS-MESSAGE'\r\n}\r\n\r\ntype AddNewDispatchType = {\r\n    type: DIALOGS_ACTION_TYPE.ADD_NEW_DIALOGS_MESSAGE\r\n}\r\n\r\ntype UpdateNewDispatchType = {\r\n    type: DIALOGS_ACTION_TYPE.UPDATE_NEW_MESSAGE_BODY\r\n    body: string\r\n}\r\n\r\nexport type DialogsDispatchType = AddNewDispatchType | UpdateNewDispatchType\r\n\r\ntype DialogsUsersType = {\r\n    id: string\r\n    name: string\r\n}\r\ntype MessageType = {\r\n    id: string\r\n    message: string\r\n}\r\ntype DialogsStateType = {\r\n    dialogs: Array<DialogsUsersType>\r\n    messages: Array<MessageType>\r\n    newDialogsMessage: string\r\n}\r\n\r\nlet initialState = {\r\n    dialogs: [\r\n        {id: v1(), name: 'Dimych'},\r\n        {id: v1(), name: 'Andrew'},\r\n        {id: v1(), name: 'Sveta'},\r\n        {id: v1(), name: 'Sasha'},\r\n        {id: v1(), name: 'Viktor'},\r\n        {id: v1(), name: 'Valera'}\r\n    ],\r\n    messages: [\r\n        {id: v1(), message: 'Hi'},\r\n        {id: v1(), message: 'How is your it-kamasutra?'},\r\n        {id: v1(), message: 'Yo'},\r\n        {id: v1(), message: 'Yo'},\r\n        {id: v1(), message: 'Yo'}\r\n    ],\r\n    newDialogsMessage: ''\r\n}\r\n\r\nconst dialogsReducer = (state: DialogsPageType = initialState, action: any) => {\r\n    switch (action.type) {\r\n        case DIALOGS_ACTION_TYPE.UPDATE_NEW_MESSAGE_BODY: {\r\n            return {\r\n                ...state,\r\n                newDialogsMessage: action.body\r\n            };\r\n        }\r\n        case DIALOGS_ACTION_TYPE.ADD_NEW_DIALOGS_MESSAGE:\r\n            let stateCopy = {...state};\r\n            let body = stateCopy.newDialogsMessage;\r\n            return {\r\n                ...state,\r\n                newDialogsMessage: '',\r\n                messages: [...state.messages, {id: v1(), message: body}]\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\nexport const AddNewDialogsPageMessageAC = ():AddNewDispatchType => {\r\n    return {\r\n        type: DIALOGS_ACTION_TYPE.ADD_NEW_DIALOGS_MESSAGE\r\n    } as const\r\n}\r\nexport const updateNewDialogsPageMessageAC = (body: string): UpdateNewDispatchType => {\r\n    return {\r\n        type: DIALOGS_ACTION_TYPE.UPDATE_NEW_MESSAGE_BODY,\r\n        body: body\r\n    } as const\r\n}\r\n\r\nexport default dialogsReducer;","C:\\Users\\44777\\Desktop\\IT-Incubator\\putSamurajaTS\\src\\redux\\profile-reducer.ts",[],"C:\\Users\\44777\\Desktop\\IT-Incubator\\putSamurajaTS\\src\\redux\\store.tsx",[],"C:\\Users\\44777\\Desktop\\IT-Incubator\\putSamurajaTS\\src\\redux\\redux-store.ts",[],"C:\\Users\\44777\\Desktop\\IT-Incubator\\putSamurajaTS\\src\\components\\Profile\\MyPosts\\MyPostsContainer.tsx",["112"],"import React from 'react';\r\nimport {addPostAC, updateNewPostTextPostAC} from \"../../../redux/profile-reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\nimport {RootStateType} from \"../../../redux/redux-store\";\r\n\r\nlet MapStateToProps = (state: RootStateType) => {\r\n    return {\r\n        profilePage: state.profileReducer\r\n    }\r\n}\r\nlet MapDispatchToProps = (dispatch: any) => {\r\n    return {\r\n        addPost: () => {\r\n            dispatch(addPostAC())\r\n        },\r\n        updateNewPostText: (newText: string) => {\r\n            dispatch(updateNewPostTextPostAC(newText))\r\n        }\r\n    }\r\n}\r\n\r\nexport const MyPostsContainer = connect(MapStateToProps, MapDispatchToProps)(MyPosts)","C:\\Users\\44777\\Desktop\\IT-Incubator\\putSamurajaTS\\src\\components\\Dialogs\\DialogsContainer.tsx",["113"],"import React from 'react';\r\nimport {AddNewDialogsPageMessageAC, updateNewDialogsPageMessageAC} from \"../../redux/dialogs-reducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {RootStateType} from \"../../redux/redux-store\";\r\n\r\nlet MapStateToProps = (state: RootStateType)  => {\r\n    return{\r\n        dialogsPage: state.dialogsReducer\r\n    }\r\n}\r\nlet MapDispatchToProps = (dispatch: any) => {\r\n    return {\r\n        sendMessage: () => {\r\n            dispatch(AddNewDialogsPageMessageAC())\r\n        },\r\n        updateNewDialogsPageMessage: (body: string) => {\r\n            dispatch(updateNewDialogsPageMessageAC(body))\r\n        }\r\n    }\r\n}\r\n\r\nexport const DialogsContainer = connect(MapStateToProps, MapDispatchToProps)(Dialogs)","C:\\Users\\44777\\Desktop\\IT-Incubator\\putSamurajaTS\\src\\StoreContext.tsx",[],"C:\\Users\\44777\\Desktop\\IT-Incubator\\putSamurajaTS\\src\\components\\Users\\Users.tsx",["114"],"import React from \"react\";\r\nimport {UsersStateType} from \"../../redux/users-reducer\";\r\nimport styles from './Users.module.css';\r\nimport axios from \"axios\";\r\nimport photoForUsers from \"./../../assets/img/photoForUsers.jpg\"\r\n\r\ntype UsersPropsType = {\r\n    users: Array<UsersStateType>\r\n    follow: (userId: string) => void\r\n    unfollow: (userId: string) => void\r\n    setUsers: (users: string) => void\r\n    setCurrentPage: (pageNumber: number) => void\r\n    setTotalCount: (totalCount: number) => void\r\n    totalUsersCount: number\r\n    pageSize: number\r\n    currentPage: number\r\n}\r\n\r\nexport class Users extends React.Component<UsersPropsType>{\r\n    componentDidMount() {\r\n        axios.get(`https://social-network.samuraijs.com/api/1.0/users?page=${this.props.currentPage}&count=${this.props.pageSize}`).then(response => {\r\n            this.props.setUsers(response.data.items)\r\n            this.props.setTotalCount(response.data.totalCount)\r\n        });\r\n    }\r\n\r\n    onPageChange = (pageNumber: number) => {\r\n         this.props.setCurrentPage(pageNumber);\r\n        axios.get(`https://social-network.samuraijs.com/api/1.0/users?page=${pageNumber}&count=${this.props.pageSize}`).then(response => {\r\n            this.props.setUsers(response.data.items)\r\n        });\r\n}\r\n\r\n    render() {\r\n\r\n        let pagesCount = Math.ceil(this.props.totalUsersCount / this.props.pageSize)\r\n\r\n        let pages = [];\r\n        for (let i = 1; i <= pagesCount; i++) {\r\n            pages.push(i)\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                <div>\r\n                    {pages.map(p => {\r\n                        return <span className={this.props.currentPage === p ? styles.selectedPage : ''}\r\n                                     onClick={() => {this.onPageChange(p)}}>{p}</span>\r\n                    })}\r\n                        </div>\r\n                    {\r\n                        this.props.users.map(u => <div key={u.id}>\r\n                        <span>\r\n                        <div>\r\n                        <img src={u.photos.small !== null ? u.photos.small : photoForUsers} className={styles.userPhoto}/>\r\n                        </div>\r\n                        <div>\r\n                    {u.followed\r\n                        ? <button onClick={() => {this.props.unfollow(u.id)}}>Unfollow</button>\r\n                        : <button onClick={() => {this.props.follow(u.id)}}>Follow</button>\r\n                    }\r\n                        </div>\r\n                        </span>\r\n                        <span>\r\n                        <span>\r\n                        <div>{u.name}</div><div>{u.status}</div>\r\n                        </span>\r\n                        <span>\r\n                        <div>u.location.country</div>\r\n                        <div>u.location.city</div>\r\n                        </span>\r\n                        <br/>\r\n                        </span>\r\n                        </div>)\r\n                    }\r\n                        </div>\r\n                        )\r\n                    }\r\n                    }\r\n\r\n","C:\\Users\\44777\\Desktop\\IT-Incubator\\putSamurajaTS\\src\\redux\\users-reducer.ts",[],"C:\\Users\\44777\\Desktop\\IT-Incubator\\putSamurajaTS\\src\\components\\Users\\UsersContainer.tsx",["115"],{"ruleId":"116","replacedBy":"117"},{"ruleId":"118","replacedBy":"119"},{"ruleId":"116","replacedBy":"120"},{"ruleId":"118","replacedBy":"121"},{"ruleId":"122","severity":1,"message":"123","line":6,"column":9,"nodeType":"124","endLine":6,"endColumn":79},{"ruleId":"125","severity":1,"message":"126","line":15,"column":17,"nodeType":"124","endLine":15,"endColumn":20},{"ruleId":"125","severity":1,"message":"126","line":18,"column":17,"nodeType":"124","endLine":18,"endColumn":20},{"ruleId":"125","severity":1,"message":"126","line":21,"column":17,"nodeType":"124","endLine":21,"endColumn":20},{"ruleId":"122","severity":1,"message":"123","line":8,"column":17,"nodeType":"124","endLine":9,"endColumn":125},{"ruleId":"122","severity":1,"message":"123","line":8,"column":13,"nodeType":"124","endLine":8,"endColumn":113},{"ruleId":"127","severity":1,"message":"128","line":28,"column":6,"nodeType":"129","messageId":"130","endLine":28,"endColumn":22},{"ruleId":"127","severity":1,"message":"131","line":1,"column":8,"nodeType":"129","messageId":"130","endLine":1,"endColumn":13},{"ruleId":"127","severity":1,"message":"131","line":1,"column":8,"nodeType":"129","messageId":"130","endLine":1,"endColumn":13},{"ruleId":"122","severity":1,"message":"123","line":53,"column":25,"nodeType":"124","endLine":53,"endColumn":123},{"ruleId":"127","severity":1,"message":"131","line":1,"column":8,"nodeType":"129","messageId":"130","endLine":1,"endColumn":13},"no-native-reassign",["132"],"no-negated-in-lhs",["133"],["132"],["133"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","@typescript-eslint/no-unused-vars","'DialogsStateType' is defined but never used.","Identifier","unusedVar","'React' is defined but never used.","no-global-assign","no-unsafe-negation"]